name: Deploy React and Express App

on:
  push:
    branches:
      - master  # 当推送到 main 分支时触发

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 检出代码
      - name: Checkout code
        uses: actions/checkout@v2

      # 设置 Node.js 版本
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      # # 前端构建
      # - name: Build frontend
      #   working-directory: ./client  # 确保指向前端代码文件夹
      #   run: |
      #     yarn install
      #     CI=false yarn build

      # # 将前端 build 文件夹上传到服务器
      # - name: Deploy frontend to server
      #   uses: appleboy/scp-action@v0.1.3
      #   with:
      #     host: ${{ secrets.SERVER_HOST }}
      #     username: ${{ secrets.SERVER_USER }}
      #     password: ${{ secrets.SERVER_PASSWORD }}
      #     source: "./client/build/*"  # 上传构建文件
      #     target: "/www/wwwroot/kanban"  # Nginx 可访问的目标目录

      # 上传后端代码到服务器
      - name: Deploy backend to server
        uses: appleboy/scp-action@v0.1.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWORD }}
          source: "./server/*"  # 上传后端代码
          target: "/root/kanban"  # 服务器上的后端文件目录

      # 连接服务器并重启后端服务
      - name: Restart backend service
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            cd /root/kanban/server
            yarn install
            pm2 describe express-app &> /dev/null
            if [ $? -ne 0 ]; then
              pm2 start yarn --name "kanban-server" -- start
            else
              pm2 restart yarn kanban-server
            fi
      # pm2 restart express-app  # 假设用 PM2 启动后端应用
